{"version":3,"sources":["../../app-es6/controllers/NegociacaoController.js"],"names":["ListaNegociacoes","Mensagem","NegociacoesView","MensagemView","NegociacaoService","DateHelper","Bind","Negociacao","NegociacaoController","$","document","querySelector","bind","_inputData","_inputQuantidade","_inputValor","_listaNegociacoes","_mensagem","_ordemAtual","_service","_init","lista","then","negociacoes","forEach","adiciona","negociacao","catch","console","log","erro","texto","setInterval","importaNegociacoes","event","preventDefault","_criaNegociacao","cadastra","mensagem","_limpaFormulario","importa","error","value","focus","textoParaData","parseInt","parseFloat","apaga","esvazia","coluna","inverteOrdem","ordena","a","b"],"mappings":"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","file":"NegociacaoController.js","sourcesContent":["import {ListaNegociacoes } from \"../models/ListaNegociacoes\";\r\nimport {Mensagem} from \"../models/Mensagem\";\r\nimport {NegociacoesView} from \"../views/NegociacoesView\";\r\nimport {MensagemView} from \"../views/MensagemView\";\r\nimport {NegociacaoService} from \"../services/NegociacaoService\";\r\nimport {DateHelper} from \"../helpers/DateHelper\";\r\nimport {Bind} from \"../helpers/Bind\";\r\nimport {Negociacao} from \"../models/Negociacao\";\r\n\r\n\r\nexport class NegociacaoController {\r\n    constructor () {\r\n\r\n        let $ = document.querySelector.bind(document);\r\n        this._inputData = $('#data');\r\n        this._inputQuantidade = $('#quantidade');\r\n        this._inputValor = $('#valor');\r\n\r\n        this._listaNegociacoes = new Bind (\r\n            new ListaNegociacoes(),\r\n            new NegociacoesView($('#negociacoesView')),\r\n            'adiciona', 'esvazia', 'ordena', 'inverteOrdem');\r\n\r\n        this._mensagem = new Bind(\r\n            new Mensagem(),\r\n            new MensagemView($('#mensagemView')),\r\n            'texto');\r\n        \r\n        this._ordemAtual = '';\r\n\r\n        this._service = new NegociacaoService();\r\n\r\n        this._init();\r\n\r\n    }\r\n    \r\n    _init() {\r\n\r\n        this._service\r\n            .lista()\r\n            .then(negociacoes =>\r\n                negociacoes.forEach(negociacao =>\r\n                    this._listaNegociacoes.adiciona(negociacao)))\r\n            .catch(erro => {\r\n                console.log(erro);\r\n                this._mensagem.texto = erro});\r\n        \r\n        /* este bloco foi para o negociacaoService, para a lista ser gera por lá\r\n           ConnectionFactory\r\n            .getConnection()\r\n            .then(conexao => new NegociacaoDao(conexao))\r\n            .then(dao => dao.listaTodos())\r\n            .then(negociacoes => \r\n                    negociacoes.forEach(negociacao => \r\n                            this._listaNegociacoes.adiciona(negociacao)))\r\n            .catch(erro => {\r\n                console.log(erro);\r\n                this._mensagem.texto = erro;\r\n            })\r\n         */\r\n\r\n            setInterval(()=>{\r\n    \r\n                this.importaNegociacoes();\r\n            }, 5000);\r\n       \r\n    }\r\n\r\n    adiciona(event) {\r\n\r\n        event.preventDefault();\r\n        let negociacao = this._criaNegociacao();\r\n\r\n        this._service\r\n            .cadastra(negociacao)\r\n            .then((mensagem) => {\r\n\r\n                this._listaNegociacoes.adiciona(negociacao);\r\n                this._mensagem.texto = mensagem;\r\n                this._limpaFormulario();\r\n            })\r\n            .catch(erro => this._mensagem.texto = erro);\r\n/*      este blco foi para o NegociacaoService\r\n        ConnectionFactory.getConnection()\r\n        .then(conexao => {\r\n            let negociacao = this._criaNegociacao();\r\n            new NegociacaoDao(conexao)\r\n            .adiciona(negociacao)\r\n            .then(() =>{\r\n                this._listaNegociacoes.adiciona(negociacao);\r\n                this._mensagem.texto = 'Negociação adicionada com sucesso!'\r\n                this._limpaFormulario();  \r\n            }) \r\n        })\r\n        .catch(erro => this._mensagem.texto = erro);\r\n*/\r\n    }\r\n\r\n    importaNegociacoes() {\r\n                          \r\n        this._service\r\n        .importa(this._listaNegociacoes.negociacoes)\r\n        .then(negociacoes => {\r\n            negociacoes.forEach(negociacao => this._listaNegociacoes.adiciona(negociacao));\r\n            this._mensagem.texto = 'Negociações do período importadas com sucesso';\r\n        })\r\n        .catch(error => this._mensagem.texto = error);  \r\n    }\r\n\r\n    _limpaFormulario(){\r\n \r\n        this._inputData.value = '';\r\n        this._inputQuantidade.value = 1;\r\n        this._inputValor.value = 0;\r\n        this._inputData.focus();\r\n        \r\n    }\r\n \r\n    _criaNegociacao(){\r\n \r\n        return new Negociacao(\r\n            DateHelper.textoParaData(this._inputData.value),\r\n            parseInt(this._inputQuantidade.value),\r\n            parseFloat(this._inputValor.value)\r\n        )\r\n    }\r\n\r\n    apaga() {\r\n\r\n        this._service\r\n            .apaga()\r\n            .then(mensagem => {\r\n\r\n                this._mensagem.texto = mensagem;\r\n                this._listaNegociacoes.esvazia();\r\n            })\r\n            .catch( erro => this._mensagem.texto = erro);\r\n       \r\n        /* ConnectionFactory\r\n            .getConnection()\r\n            .then(conexao => new NegociacaoDao(conexao))\r\n            .then(dao => dao.apagaTodos())\r\n            .then(mensagem => {\r\n\r\n                this._mensagem.texto = mensagem;\r\n                this._listaNegociacoes.esvazia();\r\n            }) \r\n        */\r\n       \r\n    }\r\n\r\n    ordena(coluna) {\r\n        \r\n        if(this._ordemAtual == coluna) {\r\n            this._listaNegociacoes.inverteOrdem();\r\n        } else {\r\n            this._listaNegociacoes.ordena((a, b) => a[coluna] - b[coluna]);//ordem crescente\r\n        }\r\n        this._ordemAtual = coluna;\r\n    }\r\n}"]}